-- Assurance Contract Annex Plugin for OSATE
-- Copyright 2023 Carnegie Mellon University.
-- NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE 
-- MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO 
-- WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT 
-- NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR 
-- RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE 
-- ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT 
-- INFRINGEMENT.
-- Released under a BSD (SEI)-style license, please see license.txt or contact 
-- permission@sei.cmu.edu for full terms.
-- [DISTRIBUTION STATEMENT A] This material has been approved for public release and 
-- unlimited distribution.  Please see Copyright notice for non-US Government use and 
-- distribution.
-- Carnegie MellonÂ® is registered in the U.S. Patent and Trademark Office by Carnegie 
-- Mellon University.
-- This Software includes and/or makes use of the following Third-Party Software subject 
-- to its own license:
-- 1. Z3 (https://github.com/Z3Prover/z3/blob/master/LICENSE.txt) Copyright Microsoft 
-- Corporation.
-- 2. Eclipse (https://www.eclipse.org/legal/epl-2.0/) Copyright 2000, 2023 Eclipse 
-- contributors and others.
-- DM23-0575

package property_lookup_test
public
	with ps;
	
	annex contract {**
		contract PropertyLookupTest {
			queries
				val direct = self#ps::string1;
				val referenceToProperty = self#ps::string3;
				val referenceToConstant = self#ps::string4;
				val undefined = self#ps::string5;
				
				val booleanProperty = self#Synchronized_Component;
				val stringProperty = self#ps::string1;
				val classifierProperty = self#Implemented_As;
				val enumProperty = self#Hardware_Source_Language;
				val integer = self#Priority;
				val integerWithUnits = self#Data_Rate;
				val real = self#ps::real1;
				val realWithUnits = self#Processor_Capacity;
				val rangeOfInteger = self#ps::integer_range1;
				val recordProperty = self#Transmission_Time;
				val referenceProperty = self#Reference_Time;
				val listProperty = self#Provided_Connection_Quality_Of_Service;
		}
	**};
	
	system s
	end s;
	
	system implementation s.i
		subcomponents
			sub1: system sub1;
		properties
			ps::string1 => "Direct Value";
			ps::string2 => "Reference to property";
			ps::string3 => ps::string2;
			ps::string4 => ps::const1;
			
			Synchronized_Component => true;
			Implemented_As => classifier (s.i);
			Hardware_Source_Language => VHDL;
			Priority => 8;
			Data_Rate => 5 KBytesps;
			ps::real1 => 82.45;
			Processor_Capacity => 3.14 MIPS;
			ps::integer_range1 => 30 .. 80 delta 5;
			Transmission_Time => [
				Fixed => 10 ms .. 20 ms;
				PerByte => 30 ms .. 40 ms;
			];
			Reference_Time => reference (sub1);
			Provided_Connection_Quality_Of_Service => (GuaranteedDelivery, OrderedDelivery);
	end s.i;
	
	system sub1
	end sub1;
end property_lookup_test;
-- Assurance Contract Annex Plugin for OSATE
-- Copyright 2023 Carnegie Mellon University.
-- NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE 
-- MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO 
-- WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT 
-- NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR 
-- RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE 
-- ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT 
-- INFRINGEMENT.
-- Released under a BSD (SEI)-style license, please see license.txt or contact 
-- permission@sei.cmu.edu for full terms.
-- [DISTRIBUTION STATEMENT A] This material has been approved for public release and 
-- unlimited distribution.  Please see Copyright notice for non-US Government use and 
-- distribution.
-- Carnegie MellonÂ® is registered in the U.S. Patent and Trademark Office by Carnegie 
-- Mellon University.
-- This Software includes and/or makes use of the following Third-Party Software subject 
-- to its own license:
-- 1. Z3 (https://github.com/Z3Prover/z3/blob/master/LICENSE.txt) Copyright Microsoft 
-- Corporation.
-- 2. Eclipse (https://www.eclipse.org/legal/epl-2.0/) Copyright 2000, 2023 Eclipse 
-- contributors and others.
-- DM23-0575

package EncryptedChannels
public
	with ARPKI_n3_Simplified;

	-- Encryption/Description unit	
	-- A "domain" in the ARPKI model!
	system Crypt
		prototypes
			dt: data;
		features
			-- Unencrypted data comes in/out here
			dec: in out event data port dt;
			--= Encrypted data comes in/out here
			enc: in out event data port;
			PKI_FG: feature group ARPKI_n3_Simplified::Domain_FG;
	end Crypt;

	system implementation Crypt.i
		subcomponents 
			encDecProcess: process CryptoProcess.i;
	end Crypt.i;

	process CryptoProcess
	end CryptoProcess;

	process implementation CryptoProcess.i
		subcomponents
			refreshThread: thread {
				period => 8 sec;
			};
	end CryptoProcess.i;

	system ChannelRealization
		prototypes
			dt: data;
		features
			endPoint1: in out event data port dt;
			endPoint2: in out event data port dt;
			PKI_FG: feature group ARPKI_n3_Simplified::Domain_FG;
	end ChannelRealization;

	system implementation ChannelRealization.i
		subcomponents
			cr1: system Crypt.i (dt => data dt);
			cr2: system Crypt.i (dt => data dt);
		connections
			c1: port endPoint1 <-> cr1.dec;
			c2: port endPoint2 <-> cr2.dec;
			actualEncryptedConnection: port cr1.enc <-> cr2.enc;
			cpki1: feature group PKI_FG <-> cr1.PKI_FG;
			cpki2: feature group PKI_FG <-> cr2.PKI_FG;
	end ChannelRealization.i;
end EncryptedChannels;

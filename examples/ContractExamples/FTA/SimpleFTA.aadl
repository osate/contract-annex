-- Assurance Contract Annex Plugin for OSATE
-- Copyright 2023 Carnegie Mellon University.
-- NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE 
-- MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO 
-- WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT 
-- NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR 
-- RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE 
-- ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT 
-- INFRINGEMENT.
-- Released under a BSD (SEI)-style license, please see license.txt or contact 
-- permission@sei.cmu.edu for full terms.
-- [DISTRIBUTION STATEMENT A] This material has been approved for public release and 
-- unlimited distribution.  Please see Copyright notice for non-US Government use and 
-- distribution.
-- Carnegie MellonÂ® is registered in the U.S. Patent and Trademark Office by Carnegie 
-- Mellon University.
-- This Software includes and/or makes use of the following Third-Party Software subject 
-- to its own license:
-- 1. Z3 (https://github.com/Z3Prover/z3/blob/master/LICENSE.txt) Copyright Microsoft 
-- Corporation.
-- 2. Eclipse (https://www.eclipse.org/legal/epl-2.0/) Copyright 2000, 2023 Eclipse 
-- contributors and others.
-- DM23-0575

package SimpleFTA
public
    annex EMV2 {**
        error behavior AllGood
            events
                Failure: error event;
            states
                Operational: initial state;
                Failed: state;
            transitions
                BadVal: Operational -[Failure]-> (Operational with 0.5, Failed with others);
        end behavior;
    **};
	system sys
		features
            dinA: in data port;
            dinB: in data port;
			dout: out data port;

        annex EMV2 {**
            use types ErrorLibrary;
            use behavior SimpleFTA::AllGood;
            
            error propagations
				dinA: in propagation  {ItemValueError};
				dinB: in propagation  {ItemValueError};
				dout: out propagation {ItemValueError};

                flows
--                    pA: error path dinA -> dout;
--                    pB: error path dinB -> dout;
                    esrc: error source dout {ItemValueError};
			end propagations;

            component error behavior
                propagations
                    Operational -[ dinA{ItemValueError} ]-> dout{ItemValueError};
            end component;
		**};
	end sys;
	
	system implementation sys.i
	end sys.i;

	
end SimpleFTA;